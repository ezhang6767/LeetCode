第二章 链表  

链表理论基础

链表初始化：

class ListNode:
    def __init__(self, val=0, next=None):
        self.val = val
        self.next = next
        


203.移除链表元素

题意：删除链表中等于给定值 val 的所有节点。

https://leetcode.cn/problems/remove-linked-list-elements/

解题思路：

1.直接使用原来的链表来进行删除操作。

链表的其他节点可以通过前一个节点来移除当前节点，但是移除头结点和移除其他节点的操作不一样，没有前节点。

所以头结点的移除需要将头结点向后移动一位，（然后将头结点从内存中删除），需要单独写一段逻辑处理头结点。

2.设置一个虚拟头结点在进行删除操作。

设置一个虚拟头结点，这样原链表的所有节点就都可以按照统一的方式进行移除了。

结尾return dummyNode.next 才是新的头结点


#虚拟头结点

class ListNode:
    def __init__(self, val=0, next=None):
        self.val = val
        self.next = next
class Solution:
    def removeElements(self, head: ListNode, val: int) -> ListNode:
        dummyHead = ListNode(next=head) #添加一个虚拟节点
        cur = dummyHead
        while cur.next:
            if cur.next.val == val:
                cur.next = cur.next.next #删除cur.next节点
            else:
                cur = cur.next
        return dummyHead.next
        

#
